* Covid 19 Data Exploration

* Skills used in this exploratory analysis are: Windows fuctions, joins, temp tables, converting data types, aggregate functions and views





-- Selecting the data


select * from Covid_deaths where continent is not null



-- Looking at the total cases and total deaths
-- Showing the death percentage in Nigeria 


select location, date, total_cases, total_deaths,(total_deaths*1.0 /total_cases)*100 as death_percentage
from Covid_deaths where location like '%Nigeria%' 
and continent is not null



-- Looking at total cases vs population
-- Percentage of population that got covid in Nigeria


select location, date, total_cases, population,(total_cases*1.0/population)*100 as population_percentage_infected
from Covid_deaths where location like '%Nigeria%'



-- Countries with the highest infection rate compared to the population


select location, population, date, max(total_cases) as highest_Infection_count, Max((total_cases*1.0/population))*100 as population_percentage_infected
from Covid_deaths
group by location, population
order by population_percentage_infected desc


-- Countries with the highest death count per population


select location, max(cast(total_deaths as int)) as total_death_count
from Covid_deaths
where continent is not null
group by location
order by total_death_count desc



-- Continents with the highest death count per population 


select continent, max(cast(total_deaths as int)) as total_death_count
from Covid_deaths
where continent is not null
group by continent
order by total_death_count desc





-- Creating view of continents with highest death count per population



CREATE VIEW HighestDeathCountByContinent as
select continent, max(cast(total_deaths as int)) as total_death_count

from Covid_deaths

where continent is not null

group by continent

order by total_death_count desc



-- Global numbers


select sum(new_cases) as total_newcases, sum(cast(new_deaths as int)) as total_deaths, 
sum(cast(new_deaths as real))/sum(new_cases)*100 as Death_percentage
from Covid_deaths where continent is not null


-- Total population vs vaccinations


select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, SUM(cast(vac.new_vaccinations as int)) OVER (Partition BY dea.location order by dea.location, dea.date) as rolling_people_vaccinated
from Covid_deaths dea
join Covid_vaccination vac
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null


-- Use CTE


with PopvsVac(Continent, Location, Date, Population, New_Vaccinations, rolling_people_vaccinated)
as
(
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
sum(cast(vac.new_vaccinations as int)) over (Partition by dea.location order by dea.location,
dea.date) as rolling_people_vaccinated
from Covid_deaths dea
join Covid_vaccination vac 
on dea.location = vac.location and dea.date= vac.date
where dea.continent is not null
)
select *, (rolling_people_vaccinated/population)*100
from PopvsVac

-- TEMP TABLE

DROP Table if exists PercentPopulationVaccinated
Create Table PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)
Insert into PercentPopulationVaccinated
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
sum(cast(vac.new_vaccinations as int)) over (Partition by dea.location order by dea.location,
dea.date) as rolling_people_vaccinated
from Covid_deaths dea
join Covid_vaccination vac 
on dea.location = vac.location and dea.date= vac.date

Select *,(RollingPeopleVaccinated*1.0/Population)*100 as PercentageVaccinated 
From PercentPopulationVaccinated


-- Creating View 

CREATE VIEW Percentage_population_vaccinated as
select dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
sum(cast(vac.new_vaccinations as int)) over (Partition by dea.location order by dea.location,
dea.date) as RollingPeopleVaccinated
from Covid_deaths dea
join Covid_vaccination vac 
on dea.location = vac.location and dea.date= vac.date
where dea.continent is not null

</sql><current_tab id="0"/></tab_sql></sqlb_project>
