*Covid 19 Data Exploration

*Skills used in this exploratory analysis are: Windows fuctions, joins, temp tables, converting data types, aggregate functions and views


-- Selecting the data

SELECT * FROM Covid_deaths WHERE continent IS NOT NULL




-- Looking at the total cases and total deaths
-- Showing the death percentage in Nigeria 

SELECT location, date, total_cases, total_deaths,(total_deaths*1.0 /total_cases)*100 AS death_percentage
FROM Covid_deaths WHERE location LIKE '%Nigeria%' 
AND continent IS NOT NULL



-- Looking at total cases vs population
-- Percentage of population that got covid in Nigeria

SELECT location, date, total_cases, population,(total_cases*1.0/population)*100 AS population_percentage_infected
FROM Covid_deaths WHERE location LIKE '%Nigeria%'



-- Countries with the highest infection rate compared to the population

SELECT location, population, MAX(total_cases) AS highest_Infection_count, MAX((total_cases*1.0/population))*100 AS population_percentage_infected
FROM Covid_deaths
GROUP BY location, population
ORDER BY population_percentage_infected DESC


-- Countries with the highest death count per population

SELECT location, MAX(CAST(total_deaths AS INT)) AS total_death_count
FROM Covid_deaths
WHERE continent IS NOT NULL
GROUP BY location
ORDER BY total_death_count DESC



-- Continents with the highest death count per population 

SELECT continent, MAX(CAST(total_deaths AS INT)) AS total_death_count
FROM Covid_deaths
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY total_death_count DESC


-- Creating view of continents with highest death count per population

CREATE VIEW HighestDeathCountByContinent AS
SELECT continent, MAX(CAST(total_deaths AS INT)) AS total_death_count
FROM Covid_deaths
WHERE continent IS NOT NULL
GROUP BY continent
ORDER BY total_death_count DESC


-- Global numbers

SELECT SUM(new_cases) AS total_newcases, SUM(CAST(new_deaths AS INT)) AS total_deaths, 
SUM(CAST(new_deaths AS REAL))/SUM(new_cases)*100 AS Death_percentage
FROM Covid_deaths WHERE continent IS NOT NULL


-- Total population vs vaccinations

SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 

SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location 

ORDER BY dea.location, dea.date) AS rolling_people_vaccinated
FROM Covid_deaths dea
JOIN Covid_vaccination vac
	ON dea.location = vac.location
	AND dea.date = vac.date
WHERE dea.continent IS NOT NULL


-- Use CTE

WITH PopvsVac(Continent, Location, Date, Population, New_Vaccinations, rolling_people_vaccinated)
AS
(
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location,
dea.date) AS rolling_people_vaccinated
FROM Covid_deaths dea
JOIN Covid_vaccination vac 
ON dea.location = vac.location AND dea.date= vac.date
WHERE dea.continent IS NOT NULL
)
SELECT *, (rolling_people_vaccinated/population)*100
FROM PopvsVac

-- TEMP TABLE

DROP TABLE IF EXISTS PercentPopulationVaccinated
CREATE TABLE PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)
INSERT INTO PercentPopulationVaccinated
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location,
dea.date) AS rolling_people_vaccinated
FROM Covid_deaths dea
JOIN Covid_vaccination vac 
ON dea.location = vac.location AND dea.date= vac.date

SELECT *,(RollingPeopleVaccinated*1.0/Population)*100 AS PercentageVaccinated 
FROM PercentPopulationVaccinated


-- Creating View 

CREATE VIEW Percentage_population_vaccinated as
SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.location,
dea.date) AS RollingPeopleVaccinated
FROM Covid_deaths dea
JOIN Covid_vaccination vac 
ON dea.location = vac.location AND dea.date= vac.date
WHERE dea.continent IS NOT NULL


